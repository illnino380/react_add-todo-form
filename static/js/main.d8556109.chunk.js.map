{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","props","user","name","email","className","href","TodoInfo","todo","id","title","completed","cn","TodoList","todos","map","username","userId","getUserById","usersFromServer","find","App","useState","setTitle","setUserId","isChoseTitle","setIsChoseTitle","isChoseUser","setIsChoseUser","todosFromServer","setTodos","onSubmit","event","preventDefault","newTodo","Math","max","currentTodos","addTodo","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8556109.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { User } from '../../types/Users';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: FC<Props> = (props) => {\n  const {\n    user: {\n      name,\n      email,\n    },\n  } = props;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: FC<Props> = (props) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = props.todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo box', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = (props) => {\n  return (\n    <section className=\"TodoList\">\n      {props.todos.map(todo => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import {\n  FC,\n  useState,\n  ChangeEvent,\n  FormEvent,\n} from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './types/Users';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport './App.scss';\n\nconst getUserById = (userId: number): User | null => {\n  const currentUser = usersFromServer.find(user => user.id === userId);\n\n  return currentUser || null;\n};\n\nconst getTodosWithUser = (): Todo[] => (\n  todosFromServer.map(todo => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }))\n);\n\nexport const App: FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [isChoseTitle, setIsChoseTitle] = useState(false);\n  const [isChoseUser, setIsChoseUser] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>(getTodosWithUser());\n\n  const getNewTodoId = (): number => {\n    return Math.max(...(todos.map(todo => todo.id))) + 1;\n  };\n\n  const addTodo = () => {\n    const newTodo: Todo = {\n      id: getNewTodoId(),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos(currentTodos => {\n      return [...currentTodos, newTodo];\n    });\n  };\n\n  const handleTitleChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setIsChoseTitle(true);\n    setTitle(event.target.value);\n  };\n\n  const handleUserChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setIsChoseUser(true);\n    setUserId(Number(event.target.value));\n  };\n\n  const resetDefaultFormStates = () => {\n    setTitle('');\n    setUserId(0);\n    setIsChoseTitle(false);\n    setIsChoseUser(false);\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (title === '') {\n      setIsChoseTitle(true);\n    }\n\n    if (userId === 0) {\n      setIsChoseUser(true);\n    }\n\n    if (title && userId) {\n      addTodo();\n      resetDefaultFormStates();\n    }\n  };\n\n  return (\n    <div className=\"App box\">\n      <h1 className=\"title is-uppercase\">\n        Add todo form\n      </h1>\n\n      <form\n        className=\"form\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitleChange}\n            className=\"\n              input\n              is-rounded\n              is-black\n            \"\n          />\n          {(isChoseTitle === true && title === '')\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUserChange}\n            className=\"select\"\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {(isChoseUser === true && userId === 0)\n            && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-info\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}